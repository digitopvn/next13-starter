# ===================================
#       PHASE 1 - BUILDER
# ===================================

FROM node:18-alpine AS BUILD_IMAGE

ENV NODE_OPTIONS=--max_old_space_size=8192

# Because ALPINE base image don't have python pre-installed 
RUN apk update && apk add bash curl python3 make g++ && rm -rf /var/cache/apk/*

WORKDIR /usr/app

COPY ./package.json ./package.json

RUN npm i pnpm -g

RUN pnpm i diginext-utils

# apps
COPY . .
COPY /.env.prod ./.env

RUN rm -rf ./src/pages/examples
RUN rm -rf ./src/pages/components

# Start building
RUN npm run img
RUN npm run build

# install node-prune (https://github.com/tj/node-prune)
RUN curl -sf https://gobinaries.com/tj/node-prune | sh

# run node-prune to scan for other unused node_modules packages
RUN /usr/local/bin/node-prune

# ===================================
#       PHASE 2 - RUNNER
# ===================================

FROM node:18-alpine AS RUNNER

WORKDIR /usr/app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

# Only copy build files & neccessary files to run:
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/next.config.js .
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/.next/standalone .
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/.next/static ./.next/static
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/public ./public
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/node_modules ./node_modules
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/next-i18next.config.js .
COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/app/.env .

EXPOSE 3000 80

CMD npm run start
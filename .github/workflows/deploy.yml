name: Deploy to K8S cluster

# TRIGGERS
on:
  push:
    branches:
      - deploy

# ENVIRONMENT VARIABLES
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BRANCH_NAME: ${{ github.head_ref || github.ref }} 

# CI/CD STEPS
jobs:
  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install package dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build source code
        run: pnpm build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Build Docker & push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: digitop/next-js-starter:latest,digitop/next-js-starter:v1
          platforms: |
            linux/amd64
            linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # k8s-deploy:
  #   name: Deploy to K8S cluster
  #   runs-on: ubuntu-latest
  #   needs: [docker-build]
  #   if: always() && !cancelled() && !failure()
  #   steps:
  #     - name: Show current branch
  #       run: echo "${{ env.BRANCH_NAME }}"

  #     - name: Show current ref
  #       run: echo "${{ github.ref }}"

  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     # credentials
  #     - run: mkdir ~/.kube
  #     - run: echo "${{ secrets.KUBECONFIG_DEV }}" >> ~/.kube/config

  #     - name: Setup Kubernetes Tools
  #       uses: yokawasa/action-setup-kube-tools@v0.9.3
  #       with:
  #         kubectl: '1.24.10'

  #     - run: kubectl version --client
  #     - run: kubectl config get-contexts
  #     - run: kubectl config current-context
  #     - run: kubectl config use-context topgroup-k3s

  #     - name: Set image to [topgroup.diginext.site] deployment
  #       run: kubectl --context=topgroup-k3s -n diginext-cli set image deployment/diginext-cli diginext-cli=digitop/diginext:$LATEST_TAG